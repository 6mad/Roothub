<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- 配置整合 MyBatis 过程 -->

	<!-- 1.数据源的配置文件-->
	<bean id="dataSourceProperties" class="wang.miansen.roothub.common.dao.jdbc.init.DataSourceProperties">
		<!-- 数据库驱动程序的完全限定名 -->
		<property name="driverClassName" value="${roothub.datasource.driver-class-name}" />
		<!-- 数据库连接池的完全限定名 -->
		<property name="dataSourceClassName" value="${roothub.dataSource.dataSource-class-name}" />
		<!-- 数据库的 JDBC URL -->
		<property name="jdbcUrl" value="${roothub.datasource.url}" />
		<!-- 数据库的登录用户名 -->
		<property name="username" value="${roothub.datasource.username}" />
		<!-- 数据库的登录密码 -->
		<property name="password" value="${roothub.datasource.password}" />
		<!-- 数据源初始化的 DDL 脚本路径 -->
		<property name="schema" value="${roothub.datasource.schema}" />
		<!-- 数据源初始化的 DML 脚本路径 -->
		<property name="data" value="${roothub.datasource.data}" />
		<!-- 数据源初始化的模式 -->
		<property name="initializationMode" value="${roothub.datasource.initialization-mode}" />
	</bean>
	
	<!-- 2.配置数据源 -->
	<bean id="dataSource" class="wang.miansen.roothub.common.dao.jdbc.spring.DataSourceConfiguration">
		<property name="dataSourceProperties" ref="dataSourceProperties" />
	</bean>
	
	<!-- 2.1数据源初始化监听器 -->
	<bean id="dataSourceInitializerListener" class="wang.miansen.roothub.common.dao.jdbc.spring.DataSourceInitializerListener" />
	
	<!-- 2.2发布初始化数据源事件 -->
	<bean id="dataSourceInitializedPublisher" class="wang.miansen.roothub.common.dao.jdbc.spring.DataSourceInitializedPublisher" >
		<property name="dataSourceProperties" ref="dataSourceProperties" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 3.配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 扫描 model 包使用别名（也就是说mapper文件里可以写简单类名，可以不用写完全限定名） -->
		<property name="typeAliasesPackage"
				  value="wang.miansen.roothub.modules.collect.model,
				  		 wang.miansen.roothub.modules.follow.model,
				  		 wang.miansen.roothub.modules.integral.model,
				  		 wang.miansen.roothub.modules.node.model,
				  		 wang.miansen.roothub.modules.notice.model,
				  		 wang.miansen.roothub.modules.comment.model,
				  		 wang.miansen.roothub.modules.sys.model,
				  		 wang.miansen.roothub.modules.tab.model,
				  		 wang.miansen.roothub.modules.tag.model,
				  		 wang.miansen.roothub.modules.post.model,
				  		 wang.miansen.roothub.modules.user.model,
				  		 wang.miansen.roothub.modules.visit.model,
				  		 wang.miansen.roothub.modules.vote.model,
				  		 wang.miansen.roothub.modules.role.model,
				  		 wang.miansen.roothub.modules.permission.model,
				  		 wang.miansen.roothub.modules.sidebar.model,
				  		 wang.miansen.roothub.modules.app.model,
				  		 wang.miansen.roothub.modules.security.model,
				  		 wang.miansen.roothub.security.entity,
				  		 wang.miansen.roothub.common.*.entity,
				  		 wang.miansen.roothub.user.*.entity"/>
		<!-- 扫描sql配置文件:mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/**/*.xml"/>
	</bean>

	<!-- 4.配置Mapper扫描器，自动扫描Dao接口，动态实现Dao接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描Dao接口包 -->
		<property name="basePackage" value="wang.miansen.roothub.modules.*.dao,
		                                    wang.miansen.roothub.security.dao,
		                                    wang.miansen.roothub.common.*.dao,
		                                    wang.miansen.roothub.user.dao"/>
	</bean>
	
</beans>